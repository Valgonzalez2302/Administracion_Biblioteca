@model Biblioteca.Models.Libro

@{
    ViewBag.Title = "Edit";
}

<h2>Editar Libro</h2>
@if (@ViewBag.ErrorMessage != null)
{
    <h3 style="color:red">
        @ViewBag.ErrorMessage
    </h3>
}

@if (@ViewBag.Info != null)
{
    <h3 style="color:darkblue">
        @ViewBag.Info
    </h3>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <div class="card">
        <div class="card-header">
            Libro
        </div>
        
        <div class="card-body">


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.LibroId)

            <div class="form-group">
                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Editorial, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Editorial, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Editorial, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FechaPublicacion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FechaPublicacion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FechaPublicacion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Genero, "Genero", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Genero", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <hr />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-outline-success" />
            @Html.ActionLink("Regresar", "Index", new { }, new { @class = "btn btn-outline-danger" })
        </div>
    </div>

</div>
        }

        <div>
           
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
